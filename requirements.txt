#0001 The system shall be able to determine if a triangle is scalene, equilateral or isosceles

#0002 The system shall accept three triangle sides as length in either float or integers

#0003 The system shall be able to determine the type of quadrilateral based on 4 sides and 4 angles

#0004 The system shall accept quadrilateral sides as floats or integers

#0005 The system shall accept quadrilateral angles as floats or integers

-- PART TWO --

#0006 The system shall accept questions in the form of strings and attempt to answer them

#0007 The system shall answer questions that begin with one of the following valid question keywords: "How", "What", "Where", "Why" and "Who"

#0008 If the system does not detect a valid question keyword it shall return "Was that a question?"

#0009 If the system does not detect a question mark at end of the string it shall return "Was that a question?"

		**Determining Answers**

#0010 The system shall break a question down into words separated by space

#0011 The system shall determine an answer to a question as a correct if the keywords provide a 90% match and return the answer

#0012 The system shall exclude any number value from match code and provide the values to generator function (if one exists)

#0013 When a valid match is determined the system shall return the answer

#0014 When no valid match is determined the system shall return "I don't know, please provide the answer"

		**Providing Answers**

#0015 The system shall provide a means of providing an answer to the previously asked question.

#0016 The system shall accept and store answers to previous questions in the form of a string or a function pointer and store it as the generator function.

#0017 If no previous question has been asked the system shall respond with "Please ask a question first"

#0018 If an attempt is made to provide an answer to an already answered question the system shall respond with "I don\'t know about that. I was taught differently" and not update the question

		**Correcting Answers**

#0019 The system shall provide a means of updating an answer to the previously asked question.

#0020 The system shall accept and store answers to previous questions in the form of a string or a function pointer and store it as the generator function.

#0021 If no previous question has been asked the system shall respond with "Please ask a question first"

		**git_utils**

#0100 The system shall return 'Yes' or 'No' when asked 'Is the <file path> in the repo?

#0110 The system shall return 'no' if not found

#0101 The system shall return one of the following when asked 'What is the status of <file path>?

#0111 The system shall return 'path has been not been checked in' if the condition is so

#0121 The system shall return 'path is a dirty repo' if the condition is so

#0131 The system shall return 'path is up to date' if the condition is so

#0141 The system shall return true if repo is dirty

#0151 The system shall return false if repo is not dirty

#0161 The system shall return true if path has diff files

#0171 The system shall return false if path does not have diff files

#0181 The system shall return true if path has untracked files

#0191 The system shall return false if path has untracked files

#0102 The system shall return '<hash>, <date modified>, <author>' when asked 'What is the deal with <file path>?

#0112 The system shall format the file path for diff files

#0113 The system shall format the file path for untracked files

#0103 The system shall return the repo branch when asked 'What branch is <file path>?

#0104 The system shall return the repo url when asked 'Where did <file path> come from?

#0050 When asked a question the system shall output the question to a log file

#0051 When asked a question the system shall output the answer to a log file

#0052 The system shall output questions and answers to the log file in under 50 ms

#0053 The system shall calculate a value of pi 5,000 times within 500ms

#0054 The system shall spike test the value of pi
